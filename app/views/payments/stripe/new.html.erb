

<!-- Display a payment form -->
<div class="container">
  <h2 style="margin-top: 50px;">Efetuar Pagamento</h2>
  <form id="payment-form">
    <div id="payment-element">
      <%# Stripe.js injects the Payment Element %>
    </div>

    <div id="error-message">
      <!-- Erros serÃ£o mostrados aqui -->
      <%# acho q o chatgpt q botou essa poha aqui %>
    </div>

    <button id="submit">
      <div class="spinner hidden" id="spinner"></div>
      <span id="button-text">Pagar agora</span>
    </button>
    <%# <button id="submit-button">Pagar</button> %>
    
    <div id="payment-message" class="hidden"></div>
  </form>
</div>

<script>
  const stripe = Stripe('<%= Rails.application.credentials.dig(:stripe, :public_key) %>');

  // The items the customer wants to buy
  const items = [{ id: "xl-tshirt", amount: 1000 }];

  let elements;

  initialize();

  document
    .querySelector("#payment-form")
    .addEventListener("submit", handleSubmit);

  // Fetches a payment intent and captures the client secret
  async function initialize() {
    // const response = await fetch("/create-payment-intent", {
    const response = await fetch('<%= payments_stripe_index_path %>', {
      method: "POST",
      headers: { 
        "Content-Type": "application/json",
        "X-CSRF-Token": "<%= form_authenticity_token %>"
      },
      body: JSON.stringify({ items }),
    });
    const { clientSecret } = await response.json();
    // ver se client_secret exist
    console.log(clientSecret);
     


    const appearance = {
      theme: 'stripe',
    };

    elements = stripe.elements({ appearance, clientSecret });

    const paymentElementOptions = {
      layout: "accordion",
    };

    const paymentElement = elements.create("payment", paymentElementOptions);
    paymentElement.mount("#payment-element");
  }

  async function handleSubmit(e) {
    e.preventDefault();
    setLoading(true);

    const { error } = await stripe.confirmPayment({
      elements,
      confirmParams: {
        // Make sure to change this to your payment completion page
        // return_url: "http://localhost:3000/complete.html",
        return_url: '<%= status_payments_stripe_index_url %>'
      },
    });

    // This point will only be reached if there is an immediate error when
    // confirming the payment. Otherwise, your customer will be redirected to
    // your `return_url`. For some payment methods like iDEAL, your customer will
    // be redirected to an intermediate site first to authorize the payment, then
    // redirected to the `return_url`.
    if (error.type === "card_error" || error.type === "validation_error") {
      showMessage(error.message);
    } else {
      showMessage("An unexpected error occurred.");
    }

    setLoading(false);
  }

  // ------- UI helpers -------

  function showMessage(messageText) {
    const messageContainer = document.querySelector("#payment-message");

    messageContainer.classList.remove("hidden");
    messageContainer.textContent = messageText;

    setTimeout(function () {
      messageContainer.classList.add("hidden");
      messageContainer.textContent = "";
    }, 4000);
  }

  // Show a spinner on payment submission
  function setLoading(isLoading) {
    if (isLoading) {
      // Disable the button and show a spinner
      document.querySelector("#submit").disabled = true;
      document.querySelector("#spinner").classList.remove("hidden");
      document.querySelector("#button-text").classList.add("hidden");
    } else {
      document.querySelector("#submit").disabled = false;
      document.querySelector("#spinner").classList.add("hidden");
      document.querySelector("#button-text").classList.remove("hidden");
    }
  }
</script>